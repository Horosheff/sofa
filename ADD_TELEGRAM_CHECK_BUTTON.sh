#!/bin/bash

# üîò –î–û–ë–ê–í–õ–ï–ù–ò–ï –ö–ù–û–ü–ö–ò –ü–†–û–í–ï–†–ö–ò TELEGRAM –¢–û–ö–ï–ù–ê
echo "üîò –î–û–ë–ê–í–õ–ï–ù–ò–ï –ö–ù–û–ü–ö–ò –ü–†–û–í–ï–†–ö–ò TELEGRAM –¢–û–ö–ï–ù–ê"
echo "=============================================="

cd /opt/sofiya/frontend/components

# 1. –°–û–ó–î–ê–ï–ú –ë–≠–ö–ê–ü
echo "1Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø SettingsPanel.tsx..."
cp SettingsPanel.tsx SettingsPanel.tsx.backup_$(date +%Y%m%d_%H%M%S)

# 2. –î–û–ë–ê–í–õ–Ø–ï–ú STATE –î–õ–Ø –ö–ù–û–ü–ö–ò
echo "2Ô∏è‚É£ –î–æ–±–∞–≤–ª—è–µ–º state –¥–ª—è –∫–Ω–æ–ø–∫–∏..."
# –ù–∞—Ö–æ–¥–∏–º —Å—Ç—Ä–æ–∫—É —Å useState –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π state –ø–æ—Å–ª–µ –Ω–µ–µ
sed -i "/const \[showCodeInput, setShowCodeInput\] = useState(false)/a\\  const [telegramTestResult, setTelegramTestResult] = useState('')\\n  const [isTelegramTesting, setIsTelegramTesting] = useState(false)" SettingsPanel.tsx

# 3. –î–û–ë–ê–í–õ–Ø–ï–ú –§–£–ù–ö–¶–ò–Æ –ü–†–û–í–ï–†–ö–ò –¢–û–ö–ï–ù–ê
echo "3Ô∏è‚É£ –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞..."
# –ù–∞—Ö–æ–¥–∏–º —Å—Ç—Ä–æ–∫—É —Å handleSubmit –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–¥ –Ω–µ–π
python3 << 'PYTHON_SCRIPT'
with open('SettingsPanel.tsx', 'r', encoding='utf-8') as f:
    content = f.read()

# –ù–∞—Ö–æ–¥–∏–º –º–µ—Å—Ç–æ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ —Ñ—É–Ω–∫—Ü–∏–∏ (–ø–µ—Ä–µ–¥ onSubmit)
insert_marker = '  const onSubmit = async'
if insert_marker in content:
    test_function = '''
  const testTelegramBot = async () => {
    if (!token) {
      error('–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è')
      return
    }
    
    setIsTelegramTesting(true)
    setTelegramTestResult('')
    
    try {
      const response = await fetch('/api/telegram/check-token', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${token}`
        }
      })
      
      const data = await response.json()
      
      if (response.ok) {
        setTelegramTestResult(`‚úÖ –¢–æ–∫–µ–Ω –≤–∞–ª–∏–¥–µ–Ω! –ë–æ—Ç: @${data.bot_info.username}`)
        success('Telegram –±–æ—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω!')
      } else {
        setTelegramTestResult(`‚ùå –û—à–∏–±–∫–∞: ${data.detail}`)
        error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞')
      }
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Telegram —Ç–æ–∫–µ–Ω–∞:', err)
      setTelegramTestResult('‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º')
      error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞')
    } finally {
      setIsTelegramTesting(false)
    }
  }

'''
    content = content.replace(insert_marker, test_function + insert_marker)
    
    with open('SettingsPanel.tsx', 'w', encoding='utf-8') as f:
        f.write(content)
    
    print("‚úÖ –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞")
else:
    print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –º–µ—Å—Ç–æ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ —Ñ—É–Ω–∫—Ü–∏–∏")
    exit(1)
PYTHON_SCRIPT

# 4. –î–û–ë–ê–í–õ–Ø–ï–ú –ö–ù–û–ü–ö–£ –í JSX
echo "4Ô∏è‚É£ –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ JSX..."
python3 << 'PYTHON_SCRIPT'
with open('SettingsPanel.tsx', 'r', encoding='utf-8') as f:
    content = f.read()

# –ù–∞—Ö–æ–¥–∏–º –º–µ—Å—Ç–æ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –∫–Ω–æ–ø–∫–∏ (–ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ PasswordField –≤ Telegram —Å–µ–∫—Ü–∏–∏)
insert_marker = '''            <PasswordField
              label="Webhook Secret (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)"
              name="telegram_webhook_secret"
              value={watchValues.telegram_webhook_secret}
              onChange={(value) => setValue('telegram_webhook_secret', value, { shouldDirty: true })}
              placeholder="your-secret-key"
            />
          </div>'''

if insert_marker in content:
    button_code = '''            <PasswordField
              label="Webhook Secret (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)"
              name="telegram_webhook_secret"
              value={watchValues.telegram_webhook_secret}
              onChange={(value) => setValue('telegram_webhook_secret', value, { shouldDirty: true })}
              placeholder="your-secret-key"
            />
          </div>
          
          {/* –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞ */}
          <div className="mt-4">
            <button
              type="button"
              onClick={testTelegramBot}
              disabled={!watchValues.telegram_bot_token || isTelegramTesting}
              className="modern-btn w-full md:w-auto disabled:opacity-50 disabled:cursor-not-allowed"
            >
              {isTelegramTesting ? '‚è≥ –ü—Ä–æ–≤–µ—Ä–∫–∞...' : 'üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–æ–∫–µ–Ω –±–æ—Ç–∞'}
            </button>
            {telegramTestResult && (
              <p className="mt-2 text-sm text-foreground/70">{telegramTestResult}</p>
            )}
          </div>'''
    
    content = content.replace(insert_marker, button_code)
    
    with open('SettingsPanel.tsx', 'w', encoding='utf-8') as f:
        f.write(content)
    
    print("‚úÖ –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞")
else:
    print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –º–µ—Å—Ç–æ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –∫–Ω–æ–ø–∫–∏")
    exit(1)
PYTHON_SCRIPT

# 5. –ü–†–û–í–ï–†–Ø–ï–ú –ß–¢–û –ö–ù–û–ü–ö–ê –î–û–ë–ê–í–õ–ï–ù–ê
echo "5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞..."
if grep -q "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–æ–∫–µ–Ω –±–æ—Ç–∞" SettingsPanel.tsx; then
    echo "‚úÖ –ö–Ω–æ–ø–∫–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞"
else
    echo "‚ùå –ö–Ω–æ–ø–∫–∞ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞"
    exit 1
fi

# 6. –ü–ï–†–ï–°–û–ë–ò–†–ê–ï–ú FRONTEND
echo "6Ô∏è‚É£ –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º frontend..."
cd /opt/sofiya/frontend
rm -rf .next/
npm run build

# 7. –ü–ï–†–ï–ó–ê–ü–£–°–ö–ê–ï–ú FRONTEND
echo "7Ô∏è‚É£ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º frontend..."
cd /opt/sofiya
pm2 restart frontend

# 8. –ü–†–û–í–ï–†–Ø–ï–ú –°–¢–ê–¢–£–°
echo "8Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å..."
pm2 status

echo ""
echo "üéØ –ö–ù–û–ü–ö–ê –ü–†–û–í–ï–†–ö–ò TELEGRAM –¢–û–ö–ï–ù–ê –î–û–ë–ê–í–õ–ï–ù–ê!"
echo "‚úÖ State –¥–æ–±–∞–≤–ª–µ–Ω"
echo "‚úÖ –§—É–Ω–∫—Ü–∏—è testTelegramBot –¥–æ–±–∞–≤–ª–µ–Ω–∞"
echo "‚úÖ –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ JSX"
echo "‚úÖ Frontend –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω –∏ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω"
echo ""
echo "–¢–µ–ø–µ—Ä—å –∑–∞–π–¥–∏ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ —É–≤–∏–¥–∏—à—å –∫–Ω–æ–ø–∫—É '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–æ–∫–µ–Ω –±–æ—Ç–∞'!"
