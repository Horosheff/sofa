'use client'

import { useState, useEffect, useMemo } from 'react'
import { useForm } from 'react-hook-form'
import PasswordField from './PasswordField'
import { useAuthStore } from '@/store/authStore'
import { useToast } from '@/hooks/useToast'
import ToastContainer from './ToastContainer'

interface SettingsResponse {
  wordpress_url?: string
  wordpress_username?: string
  wordpress_password?: string
  wordstat_client_id?: string
  wordstat_client_secret?: string
  wordstat_redirect_uri?: string
  mcp_sse_url?: string
  mcp_connector_id?: string
  timezone?: string
  language?: string
}

interface SettingsFormData {
  wordpress_url?: string
  wordpress_username?: string
  wordpress_password?: string
  wordstat_client_id?: string
  wordstat_client_secret?: string
  wordstat_redirect_uri?: string
  mcp_sse_url?: string
  mcp_connector_id?: string
  timezone?: string
  language?: string
}

export default function SettingsPanel() {
  const { toasts, success, error, removeToast } = useToast()
  const [isLoading, setIsLoading] = useState(false)
  const [isFetching, setIsFetching] = useState(false)
  const [message, setMessage] = useState('')
  const [authCode, setAuthCode] = useState('')
  const [showCodeInput, setShowCodeInput] = useState(false)
  const [authUrl, setAuthUrl] = useState('')
  const { token, user } = useAuthStore()

  const {
    register,
    handleSubmit,
    setValue,
    reset,
    watch,
    getValues,
  } = useForm<SettingsFormData>({
    defaultValues: useMemo(
      () => ({
        wordpress_url: '',
        wordpress_username: '',
        wordpress_password: '',
        wordstat_client_id: '',
        wordstat_client_secret: '',
        wordstat_redirect_uri: '',
        mcp_sse_url: '',
        mcp_connector_id: '',
        timezone: 'UTC',
        language: 'ru',
      }),
      []
    ),
  })

  const watchValues = {
    wordpress_password: watch('wordpress_password'),
    wordstat_client_secret: watch('wordstat_client_secret'),
    mcp_sse_url: watch('mcp_sse_url'),
    mcp_connector_id: watch('mcp_connector_id'),
    wordstat_client_id: watch('wordstat_client_id'),
    wordstat_redirect_uri: watch('wordstat_redirect_uri'),
  }

  useEffect(() => {
    if (!token) {
      reset()
      return
    }
    const loadSettings = async () => {
      setIsFetching(true)
      setMessage('')
      try {
        const response = await fetch('/api/user/settings', {
          headers: {
            'Content-Type': 'application/json',
            Authorization: `Bearer ${token}`,
          },
        })

        if (!response.ok) {
          throw new Error(await response.text())
        }

        const data: SettingsResponse = await response.json()
        reset({
          wordpress_url: data.wordpress_url ?? '',
          wordpress_username: data.wordpress_username ?? '',
          wordpress_password: data.wordpress_password ?? '',
          wordstat_client_id: data.wordstat_client_id ?? '',
          wordstat_client_secret: data.wordstat_client_secret ?? '',
          wordstat_redirect_uri: data.wordstat_redirect_uri ?? '',
          mcp_sse_url: data.mcp_sse_url ?? '',
          mcp_connector_id: data.mcp_connector_id ?? '',
          timezone: data.timezone ?? 'UTC',
          language: data.language ?? 'ru',
        })
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫:', error)
        setMessage('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
      } finally {
        setIsFetching(false)
      }
    }

    loadSettings()
  }, [token, reset])

  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º OAuth URL –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
  const generateOAuthUrl = async () => {
    if (!watchValues.wordstat_client_id) {
      setMessage('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ Client ID')
      return
    }

    setIsLoading(true)
    setMessage('')

    try {
      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Ñ–æ—Ä–º—ã
      const formData = getValues()
      
      // –°–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
      const response = await fetch('/api/user/settings', {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
          Authorization: `Bearer ${token}`,
        },
        body: JSON.stringify({
          wordstat_client_id: formData.wordstat_client_id,
          wordstat_client_secret: formData.wordstat_client_secret,
          wordstat_redirect_uri: formData.wordstat_redirect_uri,
          timezone: 'UTC',
          language: 'ru',
        }),
      })

      if (!response.ok) {
        const detail = await response.json().catch(() => ({}))
        throw new Error(detail?.detail || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
      }

      // –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º OAuth URL
      const currentRedirectUri = formData.wordstat_redirect_uri;
      const redirectUri = (currentRedirectUri && currentRedirectUri.trim()) || 
        (window.location.hostname === 'localhost' 
          ? 'http://localhost:3000/dashboard'
          : 'https://mcp-kv.ru/dashboard');
      
      const params = new URLSearchParams({
        client_id: formData.wordstat_client_id || '',
        redirect_uri: redirectUri,
        response_type: 'code'
      });
      
      setAuthUrl(`https://oauth.yandex.ru/authorize?${params.toString()}`);
      setMessage('‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã! OAuth —Å—Å—ã–ª–∫–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞.')
      
    } catch (error: any) {
      setMessage('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫: ' + (error.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'))
    } finally {
      setIsLoading(false)
    }
  }

  const onSubmit = async (data: SettingsFormData) => {
    if (!token) {
      setMessage('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é')
      return
    }

    setIsLoading(true)
    setMessage('')

    try {
      const response = await fetch('/api/user/settings', {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
          Authorization: `Bearer ${token}`,
        },
        body: JSON.stringify({
          ...data,
          timezone: data.timezone ?? 'UTC',
          language: data.language ?? 'ru',
        }),
      })

      if (!response.ok) {
        const detail = await response.json().catch(() => ({}))
        throw new Error(detail?.detail || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
      }

      success('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!')
    } catch (error: any) {
      error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫: ' + (error.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'))
    } finally {
      setIsLoading(false)
    }
  }

  const copyAuthUrl = () => {
    navigator.clipboard.writeText(authUrl);
    success('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
  };

  const handleCodeSubmit = async () => {
    if (!authCode.trim()) {
      error('–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
      return;
    }

    setIsLoading(true);
    
    try {
      const response = await fetch('/api/oauth/yandex/callback', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          Authorization: `Bearer ${token}`,
        },
        body: JSON.stringify({ code: authCode }),
      });

      const data = await response.json();

      if (response.ok) {
        success('–¢–æ–∫–µ–Ω —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!');
        setAuthCode('');
        setShowCodeInput(false);
      } else {
        error(data.error || '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞');
      }
    } catch (err) {
      error('–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="space-y-8">
      {/* Header */}
      <div className="text-center">
        <h2 className="text-3xl font-bold gradient-text mb-4">–ù–∞—Å—Ç—Ä–æ–π–∫–∏</h2>
        <p className="text-foreground/70">–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –≤–Ω–µ—à–Ω–∏–º —Å–µ—Ä–≤–∏—Å–∞–º</p>
      </div>

      {/* User Info */}
      <div className="glass-panel">
        <h3 className="text-xl font-bold text-foreground mb-6 flex items-center">
          üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        </h3>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div>
            <label className="block text-sm font-medium text-foreground/80 mb-2">
              –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            </label>
            <div className="modern-input w-full text-foreground/70">
              {user?.full_name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
            </div>
          </div>
          <div>
            <label className="block text-sm font-medium text-foreground/80 mb-2">
              Email
            </label>
            <div className="modern-input w-full text-foreground/70">
              {user?.email || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
            </div>
          </div>
        </div>
      </div>

      <form onSubmit={handleSubmit(onSubmit)} className="space-y-8">
        {/* WordPress Settings */}
        <div className="glass-panel">
          <h3 className="text-xl font-bold text-foreground mb-6 flex items-center">
            üìù WordPress –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
          </h3>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <label className="block text-sm font-medium text-foreground/80 mb-2">
                URL —Å–∞–π—Ç–∞ WordPress
              </label>
              <input
                {...register('wordpress_url')}
                type="url"
                className="modern-input w-full"
                placeholder="https://example.com"
              />
            </div>
            <div>
              <label className="block text-sm font-medium text-white/80 mb-2">
                –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
              </label>
              <input
                {...register('wordpress_username')}
                type="text"
                className="modern-input w-full"
                placeholder="username"
              />
            </div>
            <PasswordField
              label="–ü–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
              name="wordpress_password"
              value={watchValues.wordpress_password}
              onChange={(value) => setValue('wordpress_password', value, { shouldDirty: true })}
              onBlur={() => setValue('wordpress_password', watchValues.wordpress_password, { shouldDirty: true })}
              placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
              className="md:col-span-2"
            />
          </div>
        </div>

        {/* Wordstat Settings */}
        <div className="glass-panel">
          <h3 className="text-xl font-bold text-foreground mb-6 flex items-center">
            üìä Wordstat API –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
          </h3>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <label className="block text-sm font-medium text-foreground/80 mb-2">
                Client ID
              </label>
              <input
                {...register('wordstat_client_id')}
                type="text"
                className="modern-input w-full"
                placeholder="your_client_id"
              />
            </div>
            <PasswordField
              label="Client Secret"
              name="wordstat_client_secret"
              value={watchValues.wordstat_client_secret}
              onChange={(value) => setValue('wordstat_client_secret', value, { shouldDirty: true })}
              placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
            />
            <div className="md:col-span-2">
              <label className="block text-sm font-medium text-foreground/80 mb-2">
                Redirect URI
              </label>
              <input
                {...register('wordstat_redirect_uri')}
                type="url"
                className="modern-input w-full"
                placeholder="https://example.com/callback"
              />
              <button
                type="button"
                onClick={generateOAuthUrl}
                className="modern-button mt-2 w-full md:w-auto"
                disabled={isLoading}
              >
                üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –ø–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫—É
              </button>
            </div>
          </div>

          {/* OAuth Section */}
          {watchValues.wordstat_client_id && watchValues.wordstat_client_secret && authUrl && (
            <div className="mt-6 glass-form border-blue-500/30">
              <h4 className="text-lg font-semibold text-blue-600 mb-4">üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è Wordstat</h4>
              
              {/* Step 1: Copy Link */}
              <div className="mb-4">
                <h5 className="font-medium text-foreground mb-2">üìã –®–∞–≥ 1: –ü–æ–ª—É—á–∏—Ç–µ –∫–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏</h5>
                <div className="flex items-center space-x-2">
                  <input
                    type="text"
                    value={authUrl}
                    readOnly
                    className="flex-1 modern-input text-sm font-mono"
                  />
                  <button
                    onClick={copyAuthUrl}
                    className="modern-button px-3 py-2 text-sm font-medium"
                  >
                    üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å
                  </button>
                </div>
                <p className="text-xs text-foreground/70 mt-2">
                  –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Å—ã–ª–∫—É –∏ –æ—Ç–∫—Ä–æ–π—Ç–µ –µ—ë –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Yandex
                </p>
              </div>

              {/* Step 2: Enter Code */}
              <div>
                <h5 className="font-medium text-foreground mb-2">üîë –®–∞–≥ 2: –í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏</h5>
                {!showCodeInput ? (
                  <button
                    onClick={() => setShowCodeInput(true)}
                    className="modern-button bg-green-500/20 border-green-500/30 text-green-600 hover:bg-green-500/30 px-4 py-2 text-sm font-medium"
                  >
                    üìù –í–≤–µ—Å—Ç–∏ –∫–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                  </button>
                ) : (
                  <div className="space-y-3">
                    <div className="glass-form border-blue-500/30">
                      <p className="text-sm text-foreground mb-2">
                        –ü–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Yandex –≤—ã –±—É–¥–µ—Ç–µ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –∫–æ–¥–æ–º –≤ URL.
                        –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–æ–¥ –∏–∑ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ (–ø–∞—Ä–∞–º–µ—Ç—Ä <code>code=</code>) –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –µ–≥–æ –Ω–∏–∂–µ:
                      </p>
                      <p className="text-xs text-blue-600">
                        –ü—Ä–∏–º–µ—Ä: <code>http://localhost:3000/dashboard?code=ABC123</code> ‚Üí –∫–æ–¥: <code>ABC123</code>
                      </p>
                    </div>
                    <input
                      type="text"
                      value={authCode}
                      onChange={(e) => setAuthCode(e.target.value)}
                      placeholder="–í—Å—Ç–∞–≤—å—Ç–µ –∫–æ–¥ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∑–¥–µ—Å—å..."
                      className="w-full modern-input text-sm"
                    />
                    <div className="flex space-x-2">
                      <button
                        onClick={handleCodeSubmit}
                        disabled={isLoading}
                        className="modern-button bg-green-500/20 border-green-500/30 text-green-600 hover:bg-green-500/30 disabled:opacity-50 px-4 py-2 text-sm font-medium"
                      >
                        {isLoading ? '‚è≥ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞...' : '‚úÖ –ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω'}
                      </button>
                      <button
                        onClick={() => {
                          setShowCodeInput(false);
                          setAuthCode('');
                        }}
                        className="modern-button bg-gray-500/20 border-gray-500/30 text-gray-600 hover:bg-gray-500/30 px-4 py-2 text-sm font-medium"
                      >
                        ‚ùå –û—Ç–º–µ–Ω–∞
                      </button>
                    </div>
                  </div>
                )}
              </div>

              <div className="mt-4 glass-form border-blue-500/30">
                <h6 className="text-sm font-semibold text-blue-600 mb-2">‚ÑπÔ∏è –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:</h6>
                <ol className="text-xs text-foreground/70 space-y-1 list-decimal list-inside">
                  <li>–ù–∞–∂–º–∏—Ç–µ "–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å" –∏ –æ—Ç–∫—Ä–æ–π—Ç–µ —Å—Å—ã–ª–∫—É –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ</li>
                  <li>–ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –≤ Yandex –∏ —Ä–∞–∑—Ä–µ—à–∏—Ç–µ –¥–æ—Å—Ç—É–ø –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é</li>
                  <li>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–æ–¥ –∏–∑ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ (–ø–∞—Ä–∞–º–µ—Ç—Ä code=)</li>
                  <li>–í—Å—Ç–∞–≤—å—Ç–µ –∫–æ–¥ –≤ —Ñ–æ—Ä–º—É –≤—ã—à–µ –∏ –Ω–∞–∂–º–∏—Ç–µ "–ü–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω"</li>
                </ol>
              </div>
            </div>
          )}
        </div>

        {/* MCP SSE Settings */}
        <div className="glass-panel">
          <h3 className="text-xl font-bold text-foreground mb-6 flex items-center">
            üîó MCP SSE —Å–µ—Ä–≤–µ—Ä
          </h3>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <PasswordField
              label="URL MCP SSE —Å–µ—Ä–≤–µ—Ä–∞"
              name="mcp_sse_url"
              value={watchValues.mcp_sse_url}
              onChange={(value) => setValue('mcp_sse_url', value, { shouldDirty: true })}
              placeholder="https://mcp-kv.ru/sse/connector"
              readOnly
              className="md:col-span-2"
            />
            <PasswordField
              label="ID –∫–æ–Ω–Ω–µ–∫—Ç–æ—Ä–∞"
              name="mcp_connector_id"
              value={watchValues.mcp_connector_id}
              onChange={(value) => setValue('mcp_connector_id', value, { shouldDirty: true })}
              readOnly
            />
          </div>
          <div className="mt-4 glass-form border-blue-500/30">
            <h4 className="text-sm font-semibold text-blue-600 mb-2">üìã –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å MCP SSE URL:</h4>
            <ol className="text-xs text-foreground/70 space-y-1 list-decimal list-inside">
              <li>–ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—Å—Ç –≤–∞—à —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–Ω–Ω–µ–∫—Ç–æ—Ä</li>
              <li>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ URL –∏–∑ –ø–æ–ª—è –≤—ã—à–µ</li>
              <li>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ—Ç URL –≤ ChatGPT –∏–ª–∏ –¥—Ä—É–≥–∏—Ö AI –∫–ª–∏–µ–Ω—Ç–∞—Ö</li>
              <li>–í—ã–±–µ—Ä–∏—Ç–µ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é "OAuth" –∏–ª–∏ "–ë–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏"</li>
            </ol>
          </div>
        </div>

        {/* General Settings */}
        {/* Removed general settings per requirements */}

        {message && (
          <div className={`glass-form ${
            message.includes('–û—à–∏–±–∫–∞') 
              ? 'border-red-500/30' 
              : 'border-green-500/30'
          }`}>
            <div className={`text-sm ${
              message.includes('–û—à–∏–±–∫–∞') ? 'text-red-600' : 'text-green-600'
            }`}>
              {message}
            </div>
          </div>
        )}

        <button
          type="submit"
          disabled={isLoading}
          className="btn-primary w-full py-4 text-lg font-semibold disabled:opacity-50"
        >
          {isLoading ? '‚è≥ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : 'üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏'}
        </button>
      </form>
      
      {/* Toast Notifications */}
      <ToastContainer toasts={toasts} onRemove={removeToast} />
    </div>
  )
}