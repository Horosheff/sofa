#!/bin/bash

# üéØ –î–û–ë–ê–í–õ–Ø–ï–ú –ö–ù–û–ü–ö–£ TELEGRAM –í FRONTEND –ü–†–ê–í–ò–õ–¨–ù–û
echo "üéØ –î–û–ë–ê–í–õ–Ø–ï–ú –ö–ù–û–ü–ö–£ TELEGRAM –í FRONTEND –ü–†–ê–í–ò–õ–¨–ù–û"
echo "================================================"

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –ø–∞–ø–∫—É
cd /opt/sofiya

# 1. –°–û–ó–î–ê–ï–ú –†–ï–ó–ï–†–í–ù–£–Æ –ö–û–ü–ò–Æ
echo "1Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é SettingsPanel..."
cp frontend/components/SettingsPanel.tsx frontend/components/SettingsPanel.tsx.backup

# 2. –ß–ò–¢–ê–ï–ú –¢–ï–ö–£–©–ò–ô –§–ê–ô–õ
echo "2Ô∏è‚É£ –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–π SettingsPanel.tsx..."
head -50 frontend/components/SettingsPanel.tsx

# 3. –î–û–ë–ê–í–õ–Ø–ï–ú –°–û–°–¢–û–Ø–ù–ò–ï –î–õ–Ø TELEGRAM TEST
echo "3Ô∏è‚É£ –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è Telegram test..."
# –ò—â–µ–º –≥–¥–µ –¥–æ–±–∞–≤–∏—Ç—å useState –¥–ª—è telegramTestResult
if ! grep -q "telegramTestResult" frontend/components/SettingsPanel.tsx; then
    echo "–î–æ–±–∞–≤–ª—è–µ–º useState –¥–ª—è telegramTestResult..."
    
    # –ù–∞—Ö–æ–¥–∏–º —Å—Ç—Ä–æ–∫—É —Å –¥—Ä—É–≥–∏–º–∏ useState –∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ –Ω–µ—ë
    sed -i '/const \[.*useState.*\]/a \  const [telegramTestResult, setTelegramTestResult] = useState<{\n    status: '\''idle'\'' | '\''testing'\'' | '\''success'\'' | '\''error'\''\n    message: string\n  }>({ status: '\''idle'\'', message: '\'''\'' })' frontend/components/SettingsPanel.tsx
else
    echo "‚úÖ useState –¥–ª—è telegramTestResult —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω"
fi

# 4. –î–û–ë–ê–í–õ–Ø–ï–ú –§–£–ù–ö–¶–ò–Æ TEST_TELEGRAM_BOT
echo "4Ô∏è‚É£ –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é testTelegramBot..."
if ! grep -q "testTelegramBot" frontend/components/SettingsPanel.tsx; then
    echo "–î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é testTelegramBot..."
    
    # –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é testTelegramBot
    cat > /tmp/test_telegram_function.tsx << 'EOF'
  // –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Telegram –±–æ—Ç–∞
  const testTelegramBot = async () => {
    setTelegramTestResult({ status: 'testing', message: '–ü—Ä–æ–≤–µ—Ä—è–µ–º Telegram –±–æ—Ç–∞...' })
    
    try {
      // 1. –°–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
      const settingsData = {
        telegram_bot_token: watchValues.telegram_bot_token,
        telegram_webhook_url: watchValues.telegram_webhook_url,
        telegram_webhook_secret: watchValues.telegram_webhook_secret
      }

      const saveResponse = await fetch('/api/user/settings', {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${user?.token}`
        },
        body: JSON.stringify(settingsData)
      })

      if (!saveResponse.ok) {
        throw new Error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫')
      }

      // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω —á–µ—Ä–µ–∑ Telegram API
      const checkResponse = await fetch('/api/telegram/check-token', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${user?.token}`
        }
      })

      const checkData = await checkResponse.json()
      
      if (checkData.success) {
        setTelegramTestResult({ 
          status: 'success', 
          message: `‚úÖ Telegram –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! –ò–º—è: ${checkData.bot_name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}` 
        })
      } else {
        setTelegramTestResult({ 
          status: 'error', 
          message: `‚ùå –û—à–∏–±–∫–∞: ${checkData.error}` 
        })
      }

    } catch (error) {
      setTelegramTestResult({ 
        status: 'error', 
        message: `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: ${error}` 
      })
    }
  }
EOF

    # –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≤ —Ñ–∞–π–ª
    sed -i '/const handleSubmit/a \n  // –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Telegram –±–æ—Ç–∞\n  const testTelegramBot = async () => {\n    setTelegramTestResult({ status: '\''testing'\'', message: '\''–ü—Ä–æ–≤–µ—Ä—è–µ–º Telegram –±–æ—Ç–∞...'\'' })\n    \n    try {\n      // 1. –°–Ω–∞—á–∞–ª–∞ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n      const settingsData = {\n        telegram_bot_token: watchValues.telegram_bot_token,\n        telegram_webhook_url: watchValues.telegram_webhook_url,\n        telegram_webhook_secret: watchValues.telegram_webhook_secret\n      }\n\n      const saveResponse = await fetch('\''/api/user/settings'\'', {\n        method: '\''PUT'\'',\n        headers: {\n          '\''Content-Type'\'': '\''application/json'\'',\n          '\''Authorization'\'': `Bearer ${user?.token}`\n        },\n        body: JSON.stringify(settingsData)\n      })\n\n      if (!saveResponse.ok) {\n        throw new Error('\''–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫'\'')\n      }\n\n      // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω —á–µ—Ä–µ–∑ Telegram API\n      const checkResponse = await fetch('\''/api/telegram/check-token'\'', {\n        method: '\''POST'\'',\n        headers: {\n          '\''Content-Type'\'': '\''application/json'\'',\n          '\''Authorization'\'': `Bearer ${user?.token}`\n        }\n      })\n\n      const checkData = await checkResponse.json()\n      \n      if (checkData.success) {\n        setTelegramTestResult({ \n          status: '\''success'\'', \n          message: `‚úÖ Telegram –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç! –ò–º—è: ${checkData.bot_name || '\''–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'\''}` \n        })\n      } else {\n        setTelegramTestResult({ \n          status: '\''error'\'', \n          message: `‚ùå –û—à–∏–±–∫–∞: ${checkData.error}` \n        })\n      }\n\n    } catch (error) {\n      setTelegramTestResult({ \n        status: '\''error'\'', \n        message: `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: ${error}` \n      })\n    }\n  }' frontend/components/SettingsPanel.tsx
else
    echo "‚úÖ –§—É–Ω–∫—Ü–∏—è testTelegramBot —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞"
fi

# 5. –î–û–ë–ê–í–õ–Ø–ï–ú –ö–ù–û–ü–ö–£ –í UI
echo "5Ô∏è‚É£ –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ UI..."
if ! grep -q "–ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram –±–æ—Ç–∞" frontend/components/SettingsPanel.tsx; then
    echo "–î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–æ–≤–µ—Ä–∫–∏ Telegram..."
    
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–æ–≤–µ—Ä–∫–∏
    cat > /tmp/telegram_button.tsx << 'EOF'
        {/* –ö–ù–û–ü–ö–ê –ü–†–û–í–ï–†–ö–ò TELEGRAM –ë–û–¢–ê */}
        <div className="mt-6 p-4 bg-blue-500/10 border border-blue-500/20 rounded-lg">
          <div className="flex items-center justify-between mb-3">
            <h4 className="text-sm font-semibold text-blue-600">üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram –±–æ—Ç–∞</h4>
            <button
              type="button"
              onClick={testTelegramBot}
              disabled={!watchValues.telegram_bot_token || telegramTestResult.status === 'testing'}
              className={`px-4 py-2 rounded-lg text-sm font-medium transition-all ${
                watchValues.telegram_bot_token && telegramTestResult.status !== 'testing'
                  ? 'bg-blue-600 hover:bg-blue-700 text-white'
                  : 'bg-gray-400 text-gray-200 cursor-not-allowed'
              }`}
            >
              {telegramTestResult.status === 'testing' ? '‚è≥ –ü—Ä–æ–≤–µ—Ä—è–µ–º...' : 'üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–æ—Ç–∞'}
            </button>
          </div>
          
          {/* –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ */}
          {telegramTestResult.status !== 'idle' && (
            <div className={`p-3 rounded-lg text-sm ${
              telegramTestResult.status === 'success' ? 'bg-green-500/10 text-green-600 border border-green-500/20' :
              telegramTestResult.status === 'error' ? 'bg-red-500/10 text-red-600 border border-red-500/20' :
              'bg-blue-500/10 text-blue-600 border border-blue-500/20'
            }`}>
              {telegramTestResult.message}
            </div>
          )}
          
          <p className="text-xs text-foreground/50 mt-2">
            üí° –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –±–æ—Ç–∞ —á–µ—Ä–µ–∑ Telegram API
          </p>
        </div>
EOF

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø–æ—Å–ª–µ –ø–æ–ª–µ–π Telegram
    sed -i '/telegram_webhook_secret.*placeholder/a \n        {/* –ö–ù–û–ü–ö–ê –ü–†–û–í–ï–†–ö–ò TELEGRAM –ë–û–¢–ê */}\n        <div className="mt-6 p-4 bg-blue-500/10 border border-blue-500/20 rounded-lg">\n          <div className="flex items-center justify-between mb-3">\n            <h4 className="text-sm font-semibold text-blue-600">üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram –±–æ—Ç–∞</h4>\n            <button\n              type="button"\n              onClick={testTelegramBot}\n              disabled={!watchValues.telegram_bot_token || telegramTestResult.status === '\''testing'\''}\n              className={`px-4 py-2 rounded-lg text-sm font-medium transition-all ${\n                watchValues.telegram_bot_token && telegramTestResult.status !== '\''testing'\''\n                  ? '\''bg-blue-600 hover:bg-blue-700 text-white'\''\n                  : '\''bg-gray-400 text-gray-200 cursor-not-allowed'\''\n              }`}\n            >\n              {telegramTestResult.status === '\''testing'\'' ? '\''‚è≥ –ü—Ä–æ–≤–µ—Ä—è–µ–º...'\'' : '\''üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–æ—Ç–∞'\''}\n            </button>\n          </div>\n          \n          {/* –†–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ */}\n          {telegramTestResult.status !== '\''idle'\'' && (\n            <div className={`p-3 rounded-lg text-sm ${\n              telegramTestResult.status === '\''success'\'' ? '\''bg-green-500/10 text-green-600 border border-green-500/20'\'' :\n              telegramTestResult.status === '\''error'\'' ? '\''bg-red-500/10 text-red-600 border border-red-500/20'\'' :\n              '\''bg-blue-500/10 text-blue-600 border border-blue-500/20'\''\n            }`}>\n              {telegramTestResult.message}\n            </div>\n          )}\n          \n          <p className="text-xs text-foreground/50 mt-2">\n            üí° –ö–Ω–æ–ø–∫–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –±–æ—Ç–∞ —á–µ—Ä–µ–∑ Telegram API\n          </p>\n        </div>' frontend/components/SettingsPanel.tsx
else
    echo "‚úÖ –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Telegram —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω–∞"
fi

# 6. –ü–ï–†–ï–°–û–ë–ò–†–ê–ï–ú FRONTEND
echo "6Ô∏è‚É£ –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º frontend..."
cd frontend
rm -rf .next
npm run build

# 7. –ü–ï–†–ï–ó–ê–ü–£–°–ö–ê–ï–ú FRONTEND
echo "7Ô∏è‚É£ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º frontend..."
pm2 restart frontend

# 8. –ü–†–û–í–ï–†–Ø–ï–ú –°–¢–ê–¢–£–°
echo "8Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å..."
pm2 status

echo ""
echo "üéØ –ö–ù–û–ü–ö–ê TELEGRAM –î–û–ë–ê–í–õ–ï–ù–ê –í FRONTEND!"
echo "‚úÖ –°–æ—Å—Ç–æ—è–Ω–∏–µ telegramTestResult –¥–æ–±–∞–≤–ª–µ–Ω–æ"
echo "‚úÖ –§—É–Ω–∫—Ü–∏—è testTelegramBot –¥–æ–±–∞–≤–ª–µ–Ω–∞"
echo "‚úÖ –ö–Ω–æ–ø–∫–∞ 'üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–æ—Ç–∞' –¥–æ–±–∞–≤–ª–µ–Ω–∞"
echo "‚úÖ Frontend –ø–µ—Ä–µ—Å–æ–±—Ä–∞–Ω –∏ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω"
echo ""
echo "üîç –¢–µ–ø–µ—Ä—å –∑–∞–π–¥–∏ –Ω–∞ —Å–∞–π—Ç –∏ –ø—Ä–æ–≤–µ—Ä—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ - –¥–æ–ª–∂–Ω–∞ –ø–æ—è–≤–∏—Ç—å—Å—è –∫–Ω–æ–ø–∫–∞!"
