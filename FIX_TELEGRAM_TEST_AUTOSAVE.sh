#!/bin/bash

# üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ê–í–¢–û–°–û–•–†–ê–ù–ï–ù–ò–ï –¢–û–ö–ï–ù–ê –ü–ï–†–ï–î –ü–†–û–í–ï–†–ö–û–ô
echo "üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –ê–í–¢–û–°–û–•–†–ê–ù–ï–ù–ò–ï –¢–û–ö–ï–ù–ê –ü–ï–†–ï–î –ü–†–û–í–ï–†–ö–û–ô"
echo "======================================================"

cd /opt/sofiya/frontend/components

# 1. –°–û–ó–î–ê–ï–ú –ë–≠–ö–ê–ü
echo "1Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø SettingsPanel.tsx..."
cp SettingsPanel.tsx SettingsPanel.tsx.backup_autosave_$(date +%Y%m%d_%H%M%S)

# 2. –ò–ó–ú–ï–ù–Ø–ï–ú –§–£–ù–ö–¶–ò–Æ testTelegramBot
echo "2Ô∏è‚É£ –ò–∑–º–µ–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é testTelegramBot –¥–ª—è –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è..."
python3 << 'PYTHON_SCRIPT'
import re

with open('SettingsPanel.tsx', 'r', encoding='utf-8') as f:
    content = f.read()

# –ò—â–µ–º —Ñ—É–Ω–∫—Ü–∏—é testTelegramBot
old_function_pattern = r'const testTelegramBot = async \(\) => \{[^}]+\{[^}]+\}[^}]+\}'

# –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å –∞–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º
new_function = '''const testTelegramBot = async () => {
    if (!token) {
      error('–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è')
      return
    }
    
    const currentToken = watchValues.telegram_bot_token
    if (!currentToken || !currentToken.trim()) {
      error('–í–≤–µ–¥–∏—Ç–µ —Ç–æ–∫–µ–Ω Telegram –±–æ—Ç–∞')
      return
    }
    
    setIsTelegramTesting(true)
    setTelegramTestResult('')
    
    try {
      // 1. –°–ù–ê–ß–ê–õ–ê –°–û–•–†–ê–ù–Ø–ï–ú –¢–û–ö–ï–ù
      const settingsToSave = getValues()
      
      const saveResponse = await fetch('/api/user/settings', {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${token}`
        },
        body: JSON.stringify(settingsToSave)
      })
      
      if (!saveResponse.ok) {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏')
      }
      
      // 2. –¢–ï–ü–ï–†–¨ –ü–†–û–í–ï–†–Ø–ï–ú –¢–û–ö–ï–ù
      const response = await fetch('/api/telegram/check-token', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${token}`
        }
      })
      
      const data = await response.json()
      
      if (response.ok) {
        if (data.success) {
          setTelegramTestResult(`‚úÖ ${data.message}`)
          success('Telegram –±–æ—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω!')
        } else {
          setTelegramTestResult(`‚ùå ${data.message || data.error}`)
          error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞')
        }
      } else {
        setTelegramTestResult(`‚ùå –û—à–∏–±–∫–∞: ${data.detail}`)
        error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞')
      }
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Telegram —Ç–æ–∫–µ–Ω–∞:', err)
      setTelegramTestResult('‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º')
      error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞')
    } finally {
      setIsTelegramTesting(false)
    }
  }'''

# –ò—â–µ–º –∏ –∑–∞–º–µ–Ω—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é
if 'const testTelegramBot = async' in content:
    # –ù–∞—Ö–æ–¥–∏–º –Ω–∞—á–∞–ª–æ —Ñ—É–Ω–∫—Ü–∏–∏
    start = content.find('const testTelegramBot = async')
    if start != -1:
        # –ù–∞—Ö–æ–¥–∏–º –∫–æ–Ω–µ—Ü —Ñ—É–Ω–∫—Ü–∏–∏ (–∑–∞–∫—Ä—ã–≤–∞—é—â–∞—è —Ñ–∏–≥—É—Ä–Ω–∞—è —Å–∫–æ–±–∫–∞ –Ω–∞ —Ç–æ–º –∂–µ —É—Ä–æ–≤–Ω–µ –æ—Ç—Å—Ç—É–ø–∞)
        indent_level = 0
        end = start
        in_function = False
        
        for i in range(start, len(content)):
            if content[i] == '{':
                indent_level += 1
                in_function = True
            elif content[i] == '}':
                indent_level -= 1
                if in_function and indent_level == 0:
                    end = i + 1
                    break
        
        if end > start:
            # –ó–∞–º–µ–Ω—è–µ–º —Å—Ç–∞—Ä—É—é —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞ –Ω–æ–≤—É—é
            content = content[:start] + new_function + content[end:]
            print("‚úÖ –§—É–Ω–∫—Ü–∏—è testTelegramBot –æ–±–Ω–æ–≤–ª–µ–Ω–∞")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∫–æ–Ω–µ—Ü —Ñ—É–Ω–∫—Ü–∏–∏")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ñ—É–Ω–∫—Ü–∏—é testTelegramBot")
else:
    print("‚ùå –§—É–Ω–∫—Ü–∏—è testTelegramBot –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

with open('SettingsPanel.tsx', 'w', encoding='utf-8') as f:
    f.write(content)
PYTHON_SCRIPT

# 3. –ü–ï–†–ï–°–û–ë–ò–†–ê–ï–ú FRONTEND
echo ""
echo "3Ô∏è‚É£ –ü–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ–º frontend..."
cd /opt/sofiya/frontend
rm -rf .next/
npm run build

# 4. –ü–ï–†–ï–ó–ê–ü–£–°–ö–ê–ï–ú FRONTEND
echo ""
echo "4Ô∏è‚É£ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º frontend..."
cd /opt/sofiya
pm2 restart frontend

# 5. –ü–†–û–í–ï–†–Ø–ï–ú –°–¢–ê–¢–£–°
echo ""
echo "5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å..."
pm2 status

echo ""
echo "üéØ –ê–í–¢–û–°–û–•–†–ê–ù–ï–ù–ò–ï –¢–û–ö–ï–ù–ê –î–û–ë–ê–í–õ–ï–ù–û!"
echo "‚úÖ –¢–µ–ø–µ—Ä—å –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–æ–∫–µ–Ω':"
echo "   1. –¢–æ–∫–µ–Ω —Å–Ω–∞—á–∞–ª–∞ –°–û–•–†–ê–ù–Ø–ï–¢–°–Ø –≤ –ë–î"
echo "   2. –ü–æ—Ç–æ–º –ü–†–û–í–ï–†–Ø–ï–¢–°–Ø —á–µ—Ä–µ–∑ Telegram API"
echo ""
echo "–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –≤–≤–µ—Å—Ç–∏ —Ç–æ–∫–µ–Ω –∏ —Å—Ä–∞–∑—É –Ω–∞–∂–∞—Ç—å '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å'!"
